name: Terraform PR Validation

on:
  pull_request:
    branches: [ main ]
    paths:
      - 'JNv3/infrastructure/terraform/**'
      - '.github/workflows/**'

env:
  AWS_REGION: us-east-1
  PROJECT_NAME: jobquest-navigator-v3

jobs:
  terraform-check:
    name: Terraform Plan & Validation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: '1.6.0'
        terraform_wrapper: false
    
    - name: Terraform Format Check
      id: fmt
      run: |
        cd JNv3/infrastructure/terraform
        terraform fmt -check -diff
      continue-on-error: true
    
    - name: Terraform Init
      id: init
      run: |
        cd JNv3/infrastructure/terraform
        terraform init -backend-config=backend-configs/production.hcl -input=false
    
    - name: Terraform Validate
      id: validate
      run: |
        cd JNv3/infrastructure/terraform
        terraform validate -no-color
    
    - name: Terraform Plan  
      id: plan
      env:
        TF_VAR_project_name: ${{ env.PROJECT_NAME }}
        TF_VAR_aws_region: ${{ env.AWS_REGION }}
      run: |
        cd JNv3/infrastructure/terraform
        terraform plan -input=false -no-color -detailed-exitcode
      continue-on-error: true
    
    - name: Comment PR with Results
      uses: actions/github-script@v7
      with:
        script: |
          const output = `## 🏗️ Terraform PR Validation Results
          
          #### 📝 Format Check: \`${{ steps.fmt.outcome }}\`
          #### 🔧 Initialization: \`${{ steps.init.outcome }}\`
          #### ✅ Validation: \`${{ steps.validate.outcome }}\`  
          #### 📋 Plan: \`${{ steps.plan.outcome }}\`
          
          <details>
          <summary>📋 Terraform Plan Output</summary>
          
          \`\`\`terraform
          ${{ steps.plan.outputs.stdout }}
          \`\`\`
          
          </details>
          
          **❗ Format Issues:**
          \`\`\`diff
          ${{ steps.fmt.outputs.stdout }}
          \`\`\`
          
          **🎯 Next Steps:**
          - ✅ All checks passed: Ready to merge
          - ❌ Issues found: Fix before merging to main
          - 🔄 After merge: Full deployment will run automatically
          
          *Powered by GitHub Actions 🚀*`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          });
    
    - name: Check Status
      if: steps.fmt.outcome == 'failure' || steps.init.outcome == 'failure' || steps.validate.outcome == 'failure' || steps.plan.outcome == 'failure'
      run: |
        echo "❌ Terraform validation failed!"
        echo "Please fix the issues above before merging."
        exit 1