# Production-optimized Nginx configuration for JobQuest Navigator v2 Frontend
# Optimized for AWS ECS deployment with security and performance focus

server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;

    # Security headers (Enhanced)
    add_header X-Frame-Options "DENY" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-Permitted-Cross-Domain-Policies "none" always;
    add_header X-Download-Options "noopen" always;
    
    # Enhanced Content Security Policy for React SPA
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://apis.google.com https://*.google.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https://*.amazonaws.com https://api.jobquest-navigator.com wss:; frame-src 'none'; object-src 'none'; base-uri 'self';" always;
    
    # Remove server version information
    server_tokens off;

    # Rate limiting (basic protection)
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=static:10m rate=50r/s;

    # Enhanced compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        text/csv
        application/javascript
        application/xml+rss
        application/json
        application/ld+json
        application/atom+xml
        image/svg+xml;

    # Main React application routing
    location / {
        # Apply rate limiting
        limit_req zone=static burst=20 nodelay;
        
        # Handle React Router (SPA routing)
        try_files $uri $uri/ /index.html;
        
        # Security headers for HTML
        add_header X-Frame-Options "DENY" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot|webp|avif)$ {
        # Apply rate limiting for static assets
        limit_req zone=static burst=50 nodelay;
        
        # Long-term caching for static assets with versioning
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff" always;
        
        # Enable etag for better caching
        etag on;
        
        # Handle missing files gracefully
        try_files $uri =404;
    }

    # Manifest and service worker (special caching rules)
    location ~* \.(manifest|webmanifest)$ {
        add_header Cache-Control "public, max-age=3600";
        add_header Content-Type "application/manifest+json";
    }

    location = /service-worker.js {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # API proxy to backend (with enhanced security)
    location /api/ {
        # Apply rate limiting for API calls
        limit_req zone=api burst=10 nodelay;
        
        # Proxy configuration
        proxy_pass http://backend:8000/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer settings
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
        
        # Disable caching for API responses
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header Pragma "no-cache" always;
        add_header Expires "0" always;
    }

    # GraphQL endpoint proxy
    location /graphql {
        # Apply rate limiting for GraphQL
        limit_req zone=api burst=5 nodelay;
        
        proxy_pass http://backend:8000/graphql;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # GraphQL-specific settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Disable caching for GraphQL
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }

    # Health check endpoint (optimized)
    location = /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
    }

    # Robots.txt
    location = /robots.txt {
        add_header Content-Type text/plain;
        add_header Cache-Control "public, max-age=3600";
        return 200 "User-agent: *\nDisallow: /api/\nDisallow: /admin/\n";
    }

    # Security.txt (RFC 9116)
    location = /.well-known/security.txt {
        add_header Content-Type text/plain;
        add_header Cache-Control "public, max-age=86400";
        return 200 "Contact: security@jobquest-navigator.com\nExpires: 2025-12-31T23:59:59.000Z\nPreferred-Languages: en\n";
    }

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    location ~ \.(env|config|ini|log|sql|md|txt)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Block access to common attack vectors
    location ~* \.(asp|aspx|php|jsp|cgi)$ {
        deny all;
        access_log off;
        log_not_found off;
    }

    # Custom error pages
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }

    # Favicon handling
    location = /favicon.ico {
        log_not_found off;
        access_log off;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Logging configuration
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;
}